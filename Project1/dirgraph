#!/bin/sh

# VUT FIT IPP 2018/2019 project.
#
# Parser of IPPcode19 source code.
#
# @author Pavol Gumancik <xguman01@stud.fit.vutbr.cz>

export POSIXLY_CORRECT=yes

export val0=0
export val1=0
export val2=0
export val3=0
export val4=0
export val5=0
export val6=0
export val7=0
export val8=0

###  Check if are validity of arguments ###
checkArgs()
{
  for i in "$@"
  do
    echo $i
  done
}

### Set length of histogram ###
normalize()
{
  if [ $norm ]; then
    echo "ide"
  fi
}

### Find size of each file ###
size()
{
  size=$(($(wc -c < "$1")+0))   # get size in byts

  if [ $size -lt 100 ]; then      # <100 B
    val0=$(( val0+1 ))
  elif [ $size -lt 1024 ]; then   # <1 KiB
    val1=$(( val1+1 ))
  elif [ $size -lt 10240 ]; then  # <10 KiB
    val2=$(( val2+1 ))
  elif [ $size -lt 102400 ]; then  #  <100 KiB
    val3=$(( val3+1 ))
  elif [ $size -lt 1048576 ]; then  # <1 MiB
    val4=$(( val4+1 ))
  elif [ $size -lt 10485760 ]; then  #  <10 MiB
    val5=$(( val5+1 ))
  elif [ $size -lt 104857600 ]; then  # <100 MiB
    val6=$(( val6+1 ))
  elif [ $size -lt 1073741824 ]; then  #  <1 GiB
    val7=$(( val7+1 ))
  else                    #>=1 GiB
    val8=$(( val8+1 ))
  fi
}

### Loop trought directorys and count them ###
crossWalk()
{
  for file in $1/* ;              #Search in deep
  do
    echo "$file"
    if [ -d "$file" ];then      #Directory has been found
      cntDir=$((cntDir+1))
      crossWalk $file
    elif [ -f "$file" ];then    #File has been found
      cntFile=$((cntFile+1))

      size $file
    fi
  done
}

### Print histogram
histogram()
{
  i=0
  while [ $i -lt $1 ];
  do
    echo  "#" | tr -d '\n'
    i=$((i+1))
  done
}
### Print base for histogram ###
base()
{
  echo  "  <100 B  : " | tr -d '\n'
    histogram $val0
    echo ""
  echo  "  <1 KiB  : " | tr -d '\n'
    histogram $val1
    echo ""
  echo  "  <10 KiB : " | tr -d '\n'
    histogram $val2
    echo ""
  echo  "  <100 KiB: " | tr -d '\n'
    histogram $val3
    echo ""
  echo  "  <1 MiB  : " | tr -d '\n'
    histogram $val4
    echo ""
  echo  "  <10 MiB : " | tr -d '\n'
    histogram $val5
    echo ""
  echo  "  <100 MiB: " | tr -d '\n'
    histogram $val6
    echo ""
  echo  "  <1 GiB  : " | tr -d '\n'
    histogram $val7
    echo ""
  echo  "  >=1 GiB : " | tr -d '\n'
    histogram $val8
    echo ""
}

######################################################
##                      MAIN                        ##
######################################################
Rdir="/home/pavol/github/IOS/Project1" #$PWD
cntDir=0   #dir=$((dir+1))
cntFile=0

crossWalk $Rdir

echo "Root directory: $Rdir"
echo "Directories: $cntDir"
echo "All files: $cntFile"
echo "File size histogram:"

normalize $norm #normalize structure
base            #print histogram
